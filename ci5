import random
from deap import base, creator, tools, algorithms

def evaluate(ind):  # Simpler objective function
    x = ind[0]
    return (x - 2)**2,

creator.create("FitnessMin", base.Fitness, weights=(-1.0,))  # Minimize the objective function
creator.create("Individual", list, fitness=creator.FitnessMin)

tb = base.Toolbox()
tb.register("attr", random.uniform, -5, 5)  # Random attribute range
tb.register("individual", tools.initRepeat, creator.Individual, tb.attr, n=1)
tb.register("population", tools.initRepeat, list, tb.individual)
tb.register("evaluate", evaluate)
tb.register("mate", tools.cxBlend, alpha=0.5)
tb.register("mutate", tools.mutGaussian, mu=0, sigma=0.1, indpb=0.2)
tb.register("select", tools.selTournament, tournsize=3)

pop = tb.population(n=50)
algorithms.eaSimple(pop, tb, cxpb=0.7, mutpb=0.2, ngen=40, verbose=True)

best = tools.selBest(pop, 1)[0]
print(f"Best: x = {best[0]:.4f}, f(x) = {evaluate(best)[0]:.4f}")
